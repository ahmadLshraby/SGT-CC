name: SGT Build Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (e.g., Production, Staging)"
        required: true
        default: "Production"
        type: string
      run_build:
        description: "Run build step"
        required: true
        default: true
        type: boolean
      run_tests:
        description: "Run tests"
        required: true
        default: false
        type: boolean
      run_sonarqube:
        description: "Run SonarQube analysis"
        required: true
        default: false
        type: boolean
      run_blackduck:
        description: "Run BlackDuck security scan"
        required: true
        default: false
        type: boolean
      upload_to_store:
        description: "Upload build to the App Store"
        required: true
        default: false
        type: boolean
      what_to_test_text:
        description: "TestFlight information"
        required: false
        type: string

env:
  # APP_CENTER_APP_NAME_IOS: ADAC-Dev/ADAC-AVM-Clubmobil
  BUILD_NUMBER_BASE: 200
  CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_VERSION: 8.x
  OUTPUT_FOLDER: ${{ github.workspace }}/output
  # PROJECT_FOLDER_IOS: ADACCRRentalStationManagement.UI.iOS
  # PROJECT_NAME_IOS: ADACCRRentalStationManagement_UI_iOS
  RUN_NUMBER: ${{ github.run_number }}
  # SOLUTION_FILE: ADACCRRentalStationManagement.sln
  XCODE_VERSION: 15.4

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print inputs
        run: |
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Run Build: ${{ github.event.inputs.run_build }}"
          echo "Run Tests: ${{ github.event.inputs.run_tests }}"
          echo "Run SonarQube: ${{ github.event.inputs.run_sonarqube }}"
          echo "Run BlackDuck: ${{ github.event.inputs.run_blackduck }}"
          echo "Upload to Store: ${{ github.event.inputs.upload_to_store }}"
          echo "What To Test Text: ${{ github.event.inputs.what_to_test_text }}"

      - name: Set What To Test Text
        run: |
          echo "WHAT_TO_TEST_TEXT=Environment: ${{ github.event.inputs.environment }}\nBranch: $(git rev-parse --abbrev-ref HEAD)\nSHA: $(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # - name: Restore dotnet workloads
      #   run: |
      #     dotnet workload update
      #     dotnet workload restore

      # - name: Restore dependencies
      #   run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Select Xcode version
        run: sudo xcode-select -switch /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: Increase version number
        run: |
          for PLIST_FILE in $(find . -name "Info*.plist" -type f -not -path '*/bin/*' -not -path '*/obj/*')
          do
            echo "Updating build number in ${PLIST_FILE}"
            plutil -replace CFBundleVersion -string $((${{ env.BUILD_NUMBER_BASE }} + ${{ env.RUN_NUMBER }})) "${PLIST_FILE}"
          done

      - name: Run BlackDuck scan
        if: github.event.inputs.run_blackduck == 'true'
        run: echo "Running BlackDuck scan..."

      - name: Run Tests
        if: github.event.inputs.run_tests == 'true'
        run: dotnet test --filter FullyQualifiedName~Tests

      - name: Run SonarQube
        if: github.event.inputs.run_sonarqube == 'true'
        run: echo "Running SonarQube analysis..."

      # - name: Prepare code signing certificate
      #   uses: SGT-CC/sgt-prepare-signing-ios@v2
      #   with:
      #     codesigning_keychain_password: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
      #     codesigning_identity_cert_p12_base64: ${{ secrets.IOS_CODESIGNING_IDENTITY_CERT_P12_BASE64 }}
      #     codesigning_identity_cert_p12_password: ${{ secrets.IOS_CODESIGNING_IDENTITY_CERT_P12_PASSWORD }}

      # - name: Prepare provisioning profile for app
      #   uses: SGT-CC/sgt-prepare-signing-ios@v2
      #   with:
      #     codesigning_provisioning_profile_base64: ${{ vars.IOS_CODESIGNING_PROVISIONING_PROFILE_BASE64 }}

      # - name: Prepare provisioning profile for app notification service extension
      #   uses: SGT-CC/sgt-prepare-signing-ios@v2
      #   with:
      #     codesigning_provisioning_profile_base64: ${{ vars.IOS_CODESIGNING_PROVISIONING_PROFILE_NOTIFICATION_BASE64 }}

      - name: Build app
        if: github.event.inputs.run_build == 'true'
        env:
          IOS_CODESIGNING_IDENTITY_NAME: ${{ vars.IOS_CODESIGNING_IDENTITY_NAME }}
          IOS_CODESIGNING_PROVISIONING_PROFILE_NAME: ${{ vars.IOS_CODESIGNING_PROVISIONING_PROFILE_NAME }}
          IOS_CODESIGNING_PROVISIONING_PROFILE_NOTIFICATION_NAME: ${{ vars.IOS_CODESIGNING_PROVISIONING_PROFILE_NOTIFICATION_NAME }}
        run: >
          dotnet build
          -c "${{ env.CONFIGURATION }}"
          -t:"${{ env.PROJECT_NAME_IOS }}"
          -p:Platform="iPhone"
          -p:RuntimeIdentifier="ios-arm64"
          -p:BuildIpa=true
          ${{ env.SOLUTION_FILE }}

      - name: Trigger Slack Notification Workflow
        if: always()
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: build-completed
          client-payload: '{ "status": "${{ job.status }}", "branch": "${{ github.ref_name }}", "repo": "${{ github.repository }}", "actor": "${{ github.actor }}" }'

      - name: Upload app artifacts
        if: github.event.inputs.upload_to_store == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: ${{ env.PROJECT_FOLDER_IOS }}/bin/iPhone/${{ env.CONFIGURATION }}/net*-ios/ios-arm64/*.ipa
          retention-days: 3

      - name: Upload app symbols
        if: github.event.inputs.upload_to_store == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ios-dsym
          path: ${{ env.PROJECT_FOLDER_IOS }}/bin/iPhone/${{ env.CONFIGURATION }}/net*-ios/ios-arm64/*.dSYM
          retention-days: 3
